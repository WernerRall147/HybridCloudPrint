#Run the below Install Modules before using the Script. You will need internet access and access to Nuget Package Provider
#Install-Module AzureRM
#Install-Module AzureAD
#Install-Module PublishCloudPrinter

#Required Parameter for Logging into Azure 
Param (
    [Parameter(Mandatory = $true)]
    [string]
    $AzureAccountName)

#Required Module Import
Import-Module PublishCloudPrinter

#Required Connection to Azure Tenant
Connect-AzureAD -AccountId $AzureAccountName

#The Function that queries Subscription and Tenant Info
Function AzureSub {
# Sign in to Azure Subscription
    
    
    
    while ((Get-AzureRmContext -ErrorAction SilentlyContinue).Account.Id -ne $AzureAccountName)
    {
        Write-Host "`r`nYou are not currently signed into Azure with the account name that you provided. Sign in with the appropriate account in order to continue." -ForegroundColor Green
        pause
        Login-AzureRmAccount
    }

    $azTenantGuid = Get-AzureRmTenant

        if (($azTenantGuid.Count -gt 1) -and ($Directory.Length -gt 0))
    {
        Set-AzureRmContext -Tenant $azTenantGuid
    }
    else
    {
     if ($azTenantGuid.Count -gt 1)
        {
            Write-Host "`r`nYou have multiple Tenants associated with your Azure account. Which one would you like to use?"
            for ($i = 1; $i -le $azTenantGuid.Count; $i++)
            {
                Write-Host "$i)" -NoNewline -ForegroundColor Green
                Write-Host " $($azTenantGuid[$($i-1)].Id) - " -NoNewline -ForegroundColor White
                Write-Host $azTenantGuid[$i-1].Directory -ForegroundColor Cyan
            }
            Write-Host "Enter a Number [1 - $($azTenantGuid.Count)]: " -ForegroundColor Green -NoNewline
            $global:sel = Read-Host
            $AzTEnantGuid[$sel - 1] | Set-AzureRmContext | Out-Null
        }
     }
}

#Get the current context
$CurrentContext = Get-AzureRmContext
$Global:DirID = $CurrentContext.Tenant.Id

#The function that queries the Enterprise Mopria Discovery Service App
Function AzureMCS {
#Query the MCS App
$azAppsMCS = Get-AzureADApplication -Top 100 | Sort-Object -Property DisplayName

if ($azAppsMCS.Count -gt 1)
        {
            Write-Host "`r`nYou need to select your DiscoveryEndpoint(normally ends in /mcs). Which one would you like to use?"
            for ($j = 1; $j -le $azAppsMCS.Count; $j++)
            {
                Write-Host "$j)" -NoNewline -ForegroundColor Green
                Write-Host " $($azAppsMCS[$($j-1)].DisplayName) - " -NoNewline -ForegroundColor White
                Write-Host $azAppsMCS[$j-1].Homepage -ForegroundColor Cyan
            }
            Write-Host "Enter a Number [1 - $($azAppsMCS.Count)]:" -ForegroundColor Green -NoNewline
            $Global:sel2 = Read-Host 
            $azSelAppMCS = $azAppsMCS[$sel2 - 1] 
            $Global:azSelAppMCSURL = $azSelAppMCS.Homepage
        }
}

#The function that queries the Enterprise Cloud Print App
Function AzureECP {
#Query the ECP App
$azAppsECP = Get-AzureADApplication -Top 100 | Sort-Object -Property DisplayName
if ($azAppsECP.Count -gt 1)
        {
            Write-Host "`r`nYou need to select your EnterpriseCloudPrint(normally ends in /ecp). Which one would you like to use?"
            for ($h = 1; $h -le $azAppsECP.Count; $h++)
            {
                Write-Host "$h)" -NoNewline -ForegroundColor Green
                Write-Host " $($azAppsECP[$($h-1)].DisplayName) - " -NoNewline -ForegroundColor White
                Write-Host $azAppsECP[$h-1].Homepage -ForegroundColor Cyan
            }
            Write-Host "Enter a Number [1 - $($azAppsECP.Count)]:" -ForegroundColor Green -NoNewline
            $Global:sel3 = Read-Host 
            $azSelAppECP = $azAppsECP[$sel3 - 1] 
            $Global:azSelAppECPURL = $azSelAppECP.Homepage

        }
}

#The function that Queries the Native App
Function AzureNAT {
 #Query the Native App
 $azAppsNAT = Get-AzureADApplication -Top 100 | Sort-Object -Property DisplayName
 if ($azAppsNAT.Count -gt 1)
        {
            Write-Host "`r`nYou need to select your Native App. Which one would you like to use?"
            for ($k = 1; $k -le $azAppsNAT.Count; $k++)
            {
                Write-Host "$k)" -NoNewline -ForegroundColor Green
                Write-Host " $($azAppsNAT[$($k-1)].DisplayName) - " -NoNewline -ForegroundColor White
                Write-Host $azAppsNAT[$k-1].Homepage -ForegroundColor Cyan
            }
            Write-Host "Enter a Number [1 - $($azAppsMCS.Count)]:" -ForegroundColor Green -NoNewline
            $Global:sel4 = Read-Host 
            $azSelAppNAT = $azAppsNAT[$sel4 - 1] 
            $Global:azSelAppNATID = $azSelAppNAT.AppID
        }      
     }

#Publish a Cloud Printer
Function PublishPrinter {


#Variables

$PrinterName = Read-Host "Please enter the Printer Name"  
$PrinterMan = Read-Host -Prompt "Please enter the Printer Manufacturer"
$PrinterMod = Read-Host -Prompt "Please enter the Printer Model"
$Country = Read-Host -Prompt "Please enter the Country this Printer will be avilable in"
$Org = Read-Host -Prompt "Please enter Company this Printer belongs to eg. CCBA"
$Site = Read-Host -Prompt "Please enter Site/Physical Office this Printer is located in eg. Johannesburg"
$Building = Read-Host -Prompt "Please enter the Building Number this Printer is available in eg. Head Office"
$All = @"
'{"attrs" : [{"category" : "country", "vs":"$country", "depth":0}), {"category" : "organization", "vs":"$org", "depth":1}, {"category": "site", "vs":"$site", "depth":2}, {"category" : "building", "vs":"$building", "depth":3}]}'
"@
$PrintSDDL = Read-Host -Prompt "Please enter the Printer SDDL. You get this from running '(Get-Printer <PrinterName> -full).PermissionSDDL' on the Print SERVER" 
$FullSDDL = $("O:BA" + "$GetPrintSDL")
##$GetPrintSDL = (Get-Printer $PrinterName -full).PermissionSDDL


Publish-CloudPrinter -Printer $PrinterName `
-Manufacturer $PrinterMan -Model $PrinterMod `
-OrgLocation $All `
-Sddl "$FullSDDL" `
-DiscoveryEndpoint "$azSelAppMCSURL" `
-PrintServerEndpoint "$azSelAppECPURL" `
-AzureClientId "$azSelAppNATID" `
-AzureTenantGuid "$DirID" `
-DiscoveryResourceId "$azSelAppMCSURL"

}

#Query a Printer and verify its published
Function QueryPrinter {

Publish-CloudPrinter -Query `
-DiscoveryEndpoint "$azSelAppMCSURL" `
-AzureClientId "$azSelAppNATID" `
-AzureTenantGuid "$DirID" `
-DiscoveryResourceId "$azSelAppMCSURL"

}

#Unpublish the Printer
Function UnpublishPrinter {

#Import Required Module
#Import-Module PublishCloudPrinter

#Variables
$PrinterName = Read-Host "Please enter the Printer Name"  
$PrinterMan = Read-Host -Prompt "Please enter the Printer Manufacturer"
$PrinterMod = Read-Host -Prompt "Please enter the Printer Model"
$Country = Read-Host -Prompt "Please enter the Country this Printer will be avilable in"
$Org = Read-Host -Prompt "Please enter Company this Printer belongs to eg. CCBA"
$Site = Read-Host -Prompt "Please enter Site/Physical Office this Printer is located in eg. Johannesburg"
$Building = Read-Host -Prompt "Please enter the Building Number this Printer is available in eg. Head Office"
$All = @"
'{"attrs" : [{"category" : "country", "vs":"$country", "depth":0}), {"category" : "organization", "vs":"$org", "depth":1}, {"category": "site", "vs":"$site", "depth":2}, {"category" : "building", "vs":"$building", "depth":3}]}'
"@
$PrintSDDL = Read-Host -Prompt "Please enter the Printer SDDL. You get this from running '(Get-Printer <PrinterName> -full).PermissionSDDL' on the Print SERVER" 
$FullSDDL = $("O:BA" + "$GetPrintSDL")
##$GetPrintSDL = (Get-Printer $PrinterName -full).PermissionSDDL

Publish-CloudPrinter -Unpublish -Printer $PrinterName `
-Manufacturer $PrinterMan -Model $PrinterMod `
-OrgLocation $All `
-Sddl "$FullSDDL" `
-DiscoveryEndpoint "$azSelAppMCSURL" `
-PrintServerEndpoint "$azSelAppECPURL" `
-AzureClientId "$azSelAppNATID" `
-AzureTenantGuid "$DirID" `
-DiscoveryResourceId "$azSelAppMCSURL"

}

#Function to Create the Cloud Print Options Menu
function Show-Menu{
     param (
           [string]$Title = 'Hybrid Cloud Print Options'
     )
     cls
     Write-Host "================ $Title ================"
    
     Write-Host "1: Press '1' to Publish a New Cloud Printer."
     Write-Host "2: Press '2' to Query All Cloud Printers."
     Write-Host "3: Press '3' to Remove a Cloud Printer."
     Write-Host "Q: Press 'Ctrl-C' to quit."
}

#Function to Select the Cloud Print Options
Function Main(){
     Show-Menu
     $input = Read-Host "Please make a selection"
     switch ($input)
     {
           '1' {
                cls
                PublishPrinter
           } '2' {
                cls
                QueryPrinter
           } '3' {
                cls
                UnpublishPrinter
           } 'q' {
                return
           }
     }
     pause
}

#Execute all the functions in order
AzureSub
AzureMCS
AzureECP
AzureNAT
Main
